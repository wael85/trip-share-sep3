@page "/UserSignUp"
@using Domain.Model
@using HttpClient.ClientImplementation
@using TripShare.Shared.Components
@using Domain.DTOs

@inject IUserClient UserClient;
@inject ICarClient CarClient;
<section class="vh-100 gradient-custom">
  <div class="container py-5 h-150">
    <div class="row justify-content-center align-items-center h-75">
      <div class="col-12 col-lg-12 col-xl-7">
        <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">
          <div class="card-body p-4 p-md-12">
            <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">Trip Share</h3>
            <form>
               <div class="row">
                              <div class="col-md-6 mb-4">

                                <div class="form-outline">
                                    <label class="form-label" for="Example :emial@Domain.com">Email :</label>
                                  <input type="email" @bind="Email" class="form-control form-control-lg"/>

                                </div>
                                </div>
                 <div class="col-md-6 mb-4">

                   <div class="form-outline">
                     <label class="form-label" >Password :</label>
                     <input type="password" @bind="Password" class="form-control form-control-lg"/>

                   </div>

                 </div>
                 </div>
              <div class="row">
                <div class="col-md-6 mb-4">

                  <div class="form-outline">
                     <label class="form-label" for="firstName">First Name :</label>
                    <input type="text" @bind="Firstname"class="form-control form-control-lg"/>

                  </div>

                </div>
                <div class="col-md-6 mb-4">

                  <div class="form-outline">
                    <label class="form-label" for="lastName">Last Name :</label>
                    <input type="text" @bind="Lastname" class="form-control form-control-lg"/>

                  </div>

                </div>
              </div>

              <div class="row">
                <div class="col-md-6 mb-4 d-flex align-items-center">

                  <div class="form-outline datepicker w-100">
                    <label for="City-street-Nu-floor" class="form-label">Adress :</label>
                    <input type="text" @bind="Address" class="form-control form-control-lg"/>

                  </div>

                </div>
                <div class="col-md-6 mb-4 pb-2">

                  <div class="form-outline">
                    <label class="form-label" for="phoneNumber">Phone Number :</label>
                    
                    <input type="number" @bind="PhoneNumber" id="phoneNumber" class="form-control form-control-lg"/>

                  </div>
                </div>
              </div>
              
              
              <div class="row">
                <div class="col-12">
                  <DriverBox DriveLicense="DriveLicense" PlateNumber="plateNumber" CarType="FuelType" seats="Sreats" Color="CarColor" Model="CarModel"></DriverBox>

                </div>
              </div>

              <div class="mt-4 pt-2">
                <input class="btn btn-primary btn-lg" @onclick="CreateAsync" type="submit" value="Submit" />
              </div>
              @if (string.IsNullOrEmpty(Msg))
              {

                <label style="color: @Color">@Msg</label>
              }
              

            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

@code {
    private string Email = "";
    private string Password = "";
    private string Firstname = "";
    private string Lastname = "";
    private string PhoneNumber = "";
    private string Address = "";
    private string? DriveLicense ="";
    private string Color = "";
    private string Msg = "";
    private string SuccessMsg = "";
  private string plateNumber = "";
  private string CarColor = "";
  private string CarModel = "";
  private string FuelType = "";
  private int Sreats = 0;
  

    private async Task CreateAsync()
    {
        Msg = "";
        try
        {
          if (!string.IsNullOrEmpty(plateNumber))
          {


            await CarClient.CreateAsync(new BeADriverRequestDto(DriveLicense, plateNumber, CarColor, CarModel, Sreats, FuelType));
          }


          await UserClient.CreateAsync(new User(Email, Password, Firstname, Lastname, PhoneNumber, Address, DriveLicense));

            Email = "";
            Password = "";
            Firstname = "";
            Lastname = "";
            PhoneNumber = "";
            Address = "";
            DriveLicense = "";
          CarColor = "";
          CarModel = "";
          FuelType = "";
          Sreats = 0;
            Color = "green";
            Msg = "your Account has been add successfully";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Msg = e.Message;
            Color = "red";
        }
    }

}